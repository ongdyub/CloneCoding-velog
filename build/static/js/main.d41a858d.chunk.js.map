{"version":3,"sources":["Component/MainPage/PostItem/PostItem.js","Component/MainPage/PostListControlBar/PostListControlBar.js","Component/LoginModal/LoginModal.js","Component/MainPage/Header/Header.js","Component/MainPage/MainPage.js","Component/SearchPage/SearchItem/SearchItem.js","Component/SearchPage/SearchPage.js","Component/RecentPage/RecentPage.js","Component/WritePage/WriteModal/WriteModal.js","Component/WritePage/WritePage.js","Component/ErrorPage/ErrorPage.js","Component/PostPage/CommentsItem/CommentsItem.js","Component/PostPage/PostPage.js","Component/RegisterPage/RegisterPage.js","App.js","reportWebVitals.js","index.js"],"names":["PostItem","item","history","useHistory","handlePostClick","push","user","userId","url","className","onClick","src","thumbnail","alt","title","summary","dayjs","createAt","format","comments","image","width","height","viewBox","likes","PostListControlBar","trendPeriod","setTrendPeriod","setTrendingPostPage","window","location","pathname","replace","id","name","defaultValue","onChange","langSelect","document","getElementById","selectValue","options","selectedIndex","value","text","console","log","LoginModal","props","isOpen","setIsOpen","regExp","useState","emailInput","setEmailInput","isUser","setIsUser","disable","setDisable","signUpReq","setSignUpReq","loginReqType","setLoginReqType","loginReq","setLoginReq","Modal","setAppElement","handleType","onRequestClose","placeholder","disabled","e","target","test","axios","post","email","then","response","data","existUser","toast","success","autoClose","catch","error","href","Header","pageTitle","handleLogin","handleSearch","handleWrite","handleLogo","MainPage","trendingPostList","setTrendingPostList","trendingPostPage","useEffect","get","params","page","size","date","content","last","trendingPostRef","useRef","ref","onScroll","scrollTop","current","scrollHeight","clientHeight","concat","map","SearchItem","SearchPage","search","useLocation","URLSearchParams","searchPageRef","initialParams","tag","setTag","searchData","setSearchData","isSearching","setIsSearching","filtedNumber","setFiltedNumber","searchPageNumber","setSearchPageNumber","keyword","totalElements","length","RecentPage","recentPostList","setRecentPostList","recentPostPage","setRecentPostPage","recentPostRef","WriteModal","contents","summaryIn","setSummaryIn","summaryOver","setSummaryOver","isPublic","setIsPublic","thumbImgBase64","setThumbImgBase64","thumbImgFile","setThumbImgFile","logoImgInput","preventDefault","click","type","accept","event","reader","FileReader","onloadend","base64","result","toString","files","readAsDataURL","cut","substr","WritePage","titleRef","createRef","editorRef","setTitle","setContents","getInstance","removeHook","addHook","blob","callback","previewStyle","initialEditType","plugins","colorSyntax","codeSyntaxHighlight","highlighter","Prism","getMarkdown","ErrorPage","CommentsItem","rootComment","createdAt","dataFormat","nextPost","prevPost","seriesPosts","tags","facebookId","githubId","homepage","publicEmail","shortIntro","twitterId","commentsData","depth","replyNumber","replies","PostPage","useParams","postResponse","setPostResponse","currentUrl","postUrl","scrollTo","top","behavior","RegisterPage","URLSearch","registerName","setRegisterName","registerEmail","setRegisterEmail","registerId","setRegisterId","registerIntro","setRegisterIntro","registerError","setRegisterError","registerToken","setRegisterToken","registerCode","token","headers","authentication","match","Authentication","App","path","component","exact","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d41a858d.chunk.js","sourcesContent":["import \"./PostItem.scss\";\nimport {useHistory} from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nconst PostItem = ({item}) => {\n\n    const history = useHistory();\n\n    const handlePostClick = () =>{\n        history.push(\"/post/@\"+item.user.userId+\"/\"+item.url);\n    }\n\n\n    return (\n        <div className=\"PostItem\">\n            <div className={\"PostPhotoSection\"} onClick={handlePostClick}>\n                <img className={\"PostPhoto\"} src={item.thumbnail} alt={\"포스트 이미지\"}/>\n            </div>\n            <div className={\"PostMainSection\"} onClick={handlePostClick}>\n                <h4 className={\"PostTitle\"}>{item.title}</h4>\n                <p className={\"PostSummary\"}>{item.summary}</p>\n                <p className={\"PostSubInfo\"}>{dayjs(item.createAt).format(\"YYYY년 MM월 DD일\")} · {item.comments}개의 댓글</p>\n            </div>\n            <div className={\"PostSubSection\"}>\n                <a className={\"PostAuthorInfo\"}>\n                    <img className={\"PostAuthorImg\"} src={item.user.image} alt={\"저자 이미지\"}/>\n                    <span className={\"PostAuthorName\"}>by <b>{item.user.userId}</b></span>\n                </a>\n\n                <div className={\"Likes\"}>\n                    <svg className={\"HeartIcon\"} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" >\n                        <path className={\"HeartPath\"}/>\n                    </svg>\n                    {item.likes}\n                </div>\n\n            </div>\n\n\n\n        </div>\n    );\n};\n\nexport default PostItem;\n","import \"./PostListControlBar.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { IoMdTrendingUp } from \"react-icons/io\";\nimport { FiClock } from \"react-icons/fi\";\n\nconst PostListControlBar = ({ trendPeriod, setTrendPeriod, setTrendingPostPage }) => {\n  const history = useHistory();\n\n  const handleTrending = () => {\n    history.push(\"\");\n  };\n  const handleRecent = () => {\n    history.replace(\"/recent\");\n  };\n\n  const handlePeriod = () => {\n    const langSelect = document.getElementById(\"PeriodSelectBox\");\n    // select element에서 선택된 option의 value가 저장된다.\n    const selectValue = langSelect.options[langSelect.selectedIndex].value;\n    // select element에서 선택된 option의 text가 저장된다.\n    const selectText = langSelect.options[langSelect.selectedIndex].text;\n    setTrendPeriod(selectValue);\n    setTrendingPostPage(0);\n    console.log(selectValue);\n  };\n\n  return (\n    <div className={\"PostListControlBar\"}>\n      <div className={\"CategorySection\"}>\n        <a\n          className={\n            window.location.pathname === \"/\"\n              ? \"TrendingButton\"\n              : \"TrendingButton-unselected\"\n          }\n          onClick={handleTrending}\n        >\n          <IoMdTrendingUp className={\"TrendingIcon\"} /> 트렌딩\n        </a>\n        <a\n          className={\n            window.location.pathname === \"/recent\"\n              ? \"RecentButton\"\n              : \"RecentButton-unselected\"\n          }\n          onClick={handleRecent}\n        >\n          <FiClock className={\"ClockIcon\"} /> 최신\n        </a>\n      </div>\n\n      <select\n        id={\"PeriodSelectBox\"}\n        className={\n          window.location.pathname === \"/\"\n            ? \"PeriodSelectBox\"\n            : \"PeriodSelectBox-hidden\"\n        }\n        name=\"Period\"\n        defaultValue={\"7\"}\n        onChange={handlePeriod}\n      >\n        <option value=\"0\">오늘</option>\n        <option value=\"7\">이번 주</option>\n        <option value=\"30\">이번 달</option>\n        <option value=\"365\">올해</option>\n      </select>\n    </div>\n  );\n};\n\nexport default PostListControlBar;\n","import {useState, useEffect} from \"react\";\nimport Modal from 'react-modal';\nimport axios from \"axios\";\nimport './LoginModal.scss';\nimport {ToastContainer, toast} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst LoginModal = ( props ) => {\n\n    const {isOpen, setIsOpen} = props;\n\n    const regExp = /^[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n    \n    const [emailInput, setEmailInput] = useState(\"\");\n    const [isUser, setIsUser] = useState(true);\n    const [disable, setDisable] = useState(false);\n\n    const [signUpReq, setSignUpReq] = useState(false);\n\n    const [loginReqType, setLoginReqType] = useState(false);\n    const [loginReq, setLoginReq] = useState(false);\n\n    Modal.setAppElement('#root');\n\n    const handleType = () => {\n        setIsUser(!isUser);\n    }\n\n    //로그인 버튼\n    const handleLogin = () => {\n        if(regExp.test(emailInput)){\n            setDisable(true);\n\n            axios\n                .post(`https://waflog.kro.kr/api/v1/auth/user/login`, {\n                    email : emailInput,\n                })\n                .then((response) => {\n                    console.log(response.data);\n                    if(response.data.existUser){\n                        toast.success(\"로그인 이메일을 보냈습니다.\",{\n                            autoClose: 3000,\n                        });\n                        setLoginReqType(true);\n                        setLoginReq(true);\n                    }\n                    else{\n                        toast.success(\"가입 이메일을 보냈습니다.\",{\n                            autoClose: 6000,\n                        });\n                        setLoginReqType(true);\n                        setLoginReq(false);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n        else{\n            toast.error(\"잘못된 이메일 형식입니다.\",{\n                autoClose: 3000,\n            });\n        }\n\n    }\n\n    //회원가입 버튼\n    const handleSignUp = () => {\n        if(regExp.test(emailInput)){\n            setDisable(true);\n\n            axios\n                .post(`https://waflog.kro.kr/api/v1/auth/user`, {\n                    email : emailInput,\n                })\n                .then((response) => {\n                    console.log(response.data);\n                    if(response.data.existUser){\n                        toast.error(\"이미 존재하는 이메일입니다.\",{\n                            autoClose: 3000,\n                        });\n                        setDisable(false);\n                    }\n                    else{\n                        toast.success(\"가입 이메일을 보냈습니다.\",{\n                            autoClose: 6000,\n                        });\n                        setSignUpReq(true);\n                        setLoginReqType(true);\n                    }\n                })\n                .catch((error) => {\n                    console.log(error);\n                });\n        }\n        else{\n            toast.error(\"잘못된 이메일 형식입니다.\",{\n                autoClose: 3000,\n            });\n        }\n\n    };\n\n    return(\n        <Modal className=\"login-modal\" isOpen={isOpen} onRequestClose={() => setIsOpen(false)}>\n            <ToastContainer/>\n            {isUser ?\n                <div>\n                    <h1 className=\"login-modal-title\">로그인</h1>\n                    <h2 className=\"login-modal-email\">이메일로 로그인</h2>\n                    {loginReqType ?\n                        loginReq ?\n                            <div className=\"login-modal-inputbox\">\n                                <div className=\"login-link-alert\">로그인 링크가 이메일로 전송되었습니다.</div>\n                            </div>\n                            :\n                            <div className=\"login-modal-inputbox\">\n                                <div className=\"login-link-alert\">회원가입 링크가 이메일로 전송되었습니다.</div>\n                            </div>\n                        :\n                        <div className=\"login-modal-inputbox\">\n                            <input className=\"login-modal-input\" placeholder=\"이메일을 입력하세요.\" disabled={disable} value={emailInput} onChange={(e) => setEmailInput(e.target.value)}/>\n                            <button className=\"login-modal-btn\" disabled={disable} onClick={handleLogin}>로그인</button>\n                        </div>\n                    }\n\n                    <h2 className=\"login-modal-social\">소셜 계정으로 로그인</h2>\n                    <a className=\"login-github\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/github?next=/\">\n                        <img className=\"github-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Octicons-mark-github.svg/1200px-Octicons-mark-github.svg.png\" alt=\"git\"/>\n                    </a>\n                    <a className=\"login-google\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/google?next=/\">\n                        <img className=\"google-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/120px-Google_%22G%22_Logo.svg.png\" alt=\"G\" />\n                    </a>\n                    <a className=\"login-facebook\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/facebook?next=/search\">\n                        <img className=\"facebook-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\" alt=\"f\" />\n                    </a>\n                    <div className=\"select-box\">\n                        <span className=\"select-text\">아직 회원이 아니신가요?</span>\n                        <div className=\"select-type\" onClick={handleType}>회원가입</div>\n                    </div>\n                </div> :\n                <div>\n                    <h1 className=\"login-modal-title\">회원가입</h1>\n                    <h2 className=\"login-modal-email\">이메일로 회원가입</h2>\n                    {signUpReq ?\n                        <div className=\"login-modal-inputbox\">\n                            <div className=\"login-link-alert\">회원가입 링크가 이메일로 전송되었습니다.</div>\n                        </div>\n                        :\n                        <div className=\"login-modal-inputbox\">\n                            <input className=\"login-modal-input\" placeholder=\"이메일을 입력하세요.\" value={emailInput} disabled={disable} onChange={(e) => setEmailInput(e.target.value)}/>\n                            <button className=\"login-modal-btn\" onClick={handleSignUp} disabled={disable}>회원가입</button>\n                        </div>\n                    }\n                    <h2 className=\"login-modal-social\">소셜 계정으로 회원가입</h2>\n                    <a className=\"login-github\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/github?next=/\">\n                        <img className=\"github-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Octicons-mark-github.svg/1200px-Octicons-mark-github.svg.png\" alt=\"git\"/>\n                    </a>\n                    <a className=\"login-google\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/google?next=/\">\n                        <img className=\"google-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/120px-Google_%22G%22_Logo.svg.png\" alt=\"G\" />\n                    </a>\n                    <a className=\"login-facebook\" href=\"https://v2.velog.io/api/v2/auth/social/redirect/facebook?next=/search\">\n                        <img className=\"facebook-img\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/51/Facebook_f_logo_%282019%29.svg\" alt=\"f\" />\n                    </a>\n                    <div className=\"select-box\">\n                        <span className=\"select-text\">계정이 이미 있으신가요?</span>\n                        <div className=\"select-type\" onClick={handleType}>로그인</div>\n                    </div>\n                </div>\n            }\n        </Modal>\n    )\n}\n\nexport default LoginModal;","import {useState} from \"react\";\nimport {useHistory} from \"react-router-dom\";\nimport \"./Header.scss\";\nimport { IoSearchOutline } from \"react-icons/io5\";\nimport LoginModal from \"../../LoginModal/LoginModal\";\nimport \"@fontsource/source-code-pro\";\n\n\nconst Header = ({pageTitle}) => {\n\n    const [isLogin, setIsLogin] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n\n    const history = useHistory();\n\n    const handleLogin = () => {\n        setIsOpen(true);\n    }\n    const handleSearch = () => {\n        history.push('/search');\n    }\n    const handleWrite = () => {\n        history.push('/write');\n    }\n    const handleLogo = () => {\n        history.push(\"\");\n    }\n    const handlePageTitle = () => {\n\n    }\n\n    if(window.location.pathname === \"/\" || window.location.pathname === \"/recent\" || window.location.pathname === \"/search\") {\n        return (\n            <div className=\"header\">\n                <a className=\"logo\" onClick={handleLogo} target=\"_blank\">\n                    <img className=\"logo-img\"\n                         src=\"https://wafflestudio.com/_next/image?url=%2Fimages%2Ficon_intro.svg&w=640&q=75\"\n                         alt=\"waffle_studio\"/>\n                </a>\n                <div className=\"main-title\" onClick={handleLogo}>Waflog</div>\n                <IoSearchOutline className=\"search-icon\" onClick={handleSearch}/>\n                <button className=\"btn-write\" onClick={handleWrite}>새 글 작성</button>\n                <button className=\"btn-login\" onClick={handleLogin}>로그인</button>\n                <LoginModal isOpen={isOpen} setIsOpen={setIsOpen}></LoginModal>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"header\">\n                <a className=\"logo\" onClick={handleLogo} target=\"_blank\">\n                    <img className=\"logo-img\"\n                         src=\"https://wafflestudio.com/_next/image?url=%2Fimages%2Ficon_intro.svg&w=640&q=75\"\n                         alt=\"waffle_studio\"/>\n                </a>\n                <div className=\"page-title\" onClick={handlePageTitle}>{pageTitle}</div>\n                <IoSearchOutline className=\"search-icon\" onClick={handleSearch}/>\n                <button className=\"btn-write\" onClick={handleWrite}>새 글 작성</button>\n                <button className=\"btn-login\" onClick={handleLogin}>로그인</button>\n                <LoginModal isOpen={isOpen} setIsOpen={setIsOpen}></LoginModal>\n            </div>\n        )\n    }\n}\n\nexport default Header;","import { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./MainPage.scss\";\nimport PostItem from \"./PostItem/PostItem\";\nimport PostListControlBar from \"./PostListControlBar/PostListControlBar\";\nimport Header from \"./Header/Header\";\n\n// 더미 데이터\nconst dummyData = [\n  {\n    id: 1,\n    title: \"2021 나만의 도시 여행기\",\n    summary: \"2021년 다녀본 국내 여행지들 모음\",\n    postImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"김와플\",\n    likes: 100,\n  },\n  {\n    id: 2,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n  {\n    id: 3,\n    title: \"도시데이터 창업 사례들\",\n    summary: 1,\n    postImg:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2560px-React-icon.svg.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"한와플\",\n    likes: 47,\n  },\n  {\n    id: 4,\n    title: \"도시데이터 종류와 활용\",\n    summary: \"도시데이터 종류와 활용\",\n    postImg:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2560px-React-icon.svg.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"우와플\",\n    likes: 39,\n  },\n  {\n    id: 5,\n    title: \"벨로그 웹 개발 이야기 이것은 기기기긱기기기기기기기긴 제목\",\n    summary:\n      \"벨로그 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다! 도화지 서비스 개발을 직접 해보다!\",\n    postImg:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a7/React-icon.svg/2560px-React-icon.svg.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"조형근\",\n    likes: 23,\n  },\n];\n\nconst MainPage = () => {\n  const [trendPeriod, setTrendPeriod] = useState(7);\n  const [trendingPostList, setTrendingPostList] = useState([]);\n  const [trendingPostPage, setTrendingPostPage] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(\"https://waflog.kro.kr/api/v1/post/trend\", {\n        params: {\n          page: 0,\n          size: 4,\n          date: trendPeriod\n        }\n      })\n      .then((response) => {\n        console.log(response);\n        setTrendingPostList(response.data.content);\n\n        if (response.data.last === true) {\n          setTrendingPostPage(null);\n        }\n        else{\n          setTrendingPostPage(1);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, [trendPeriod]);\n\n  const trendingPostRef = useRef({});\n\n  const handleScroll = () => {\n    const scrollTop = trendingPostRef.current.scrollTop;\n    const scrollHeight = trendingPostRef.current.scrollHeight;\n    const clientHeight = trendingPostRef.current.clientHeight;\n\n    if (scrollHeight - scrollTop - clientHeight === 0) {\n      console.log(\"BOTTOM!!!!!\")\n      console.log(trendingPostPage);\n      if (!(trendingPostPage === null)) {\n        axios\n          .get(\"https://waflog.kro.kr/api/v1/post/trend\", {\n            params: {\n              page: trendingPostPage,\n              size: 4,\n              date: trendPeriod\n            }\n          })\n          .then((response) => {\n            setTrendingPostList(trendingPostList.concat(response.data.content));\n            if (response.data.last === true) {\n              setTrendingPostPage(null);\n            } else {\n              setTrendingPostPage(trendingPostPage + 1);\n            }\n            console.log(response);\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"mainpage\" ref={trendingPostRef} onScroll={handleScroll}>\n      <Header />\n      <PostListControlBar\n        trendPeriod={trendPeriod}\n        setTrendPeriod={setTrendPeriod}\n        setTrendingPostPage={setTrendingPostPage}\n      />\n\n      <ul className={\"PostList\"}>\n        {trendingPostList.map((item) => (\n          <PostItem item={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import './SearchItem.scss';\nimport { useHistory } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nconst SearchItem = ({item}) => {\n\n    const history = useHistory();\n\n    const handlePostClick = () =>{\n        history.push(\"/post/@\"+item.user.userId+\"/\"+item.url);\n    }\n\n    return(\n        <div className=\"search-item\">\n            <div className=\"user-info\">\n                <img className=\"user-profile\" src={item.user.image} alt=\"저자 이미지\"/>\n                <div className=\"user-name\">{item.user.userId}</div>\n            </div>\n            <div className=\"thumbnail\" onClick={handlePostClick}>\n                <img className=\"thumbnail-img\" src={item.thumbnail} alt=\"썸네일\"/>\n            </div>\n            <div className=\"post-mainsection\" onClick={handlePostClick}>\n                <div className=\"title\">{item.title}</div>\n                <div className=\"summary\">{item.summary}</div>\n                <div className=\"tags\"></div>\n                <div className=\"sub-info\">{dayjs(item.createAt).format(\"YYYY년 MM월 DD일\")} · {item.comments}개의 댓글</div>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchItem;","import {useHistory, useParams, useLocation} from \"react-router-dom\";\nimport axios from \"axios\";\nimport {useEffect, useState, useRef} from \"react\";\nimport './SearchPage.scss';\nimport Header from '../MainPage/Header/Header';\nimport { IoIosSearch } from \"react-icons/io\";\nimport SearchItem from './SearchItem/SearchItem';\n\nconst SearchPage = () => {\n\n    const history = useHistory();\n    const {search} = useLocation();\n    const params = new URLSearchParams(search);\n    const searchPageRef = useRef({});\n    const initialParams = params.get('q') === null ? \"\" : params.get('q');\n    \n    const [tag, setTag] = useState(initialParams);\n    const [searchData, setSearchData] = useState([]);\n    const [isSearching, setIsSearching] = useState(false);\n    const [filtedNumber, setFiltedNumber] = useState(0);\n    const [searchPageNumber, setSearchPageNumber] = useState(0);\n    \n    const handleInput = (e) => {\n        setTag(e.target.value);\n        history.replace(`/search?q=${e.target.value}`);\n    }\n\n    useEffect(() => {\n        axios\n            .get(`https://waflog.kro.kr/api/v1/post/search`, {\n                params: {\n                    keyword: tag,\n                    page: 0,\n                    size: 3\n                },\n            })\n            .then((response) => {\n                console.log(response.data.content);\n                setSearchData(response.data.content);\n                setFiltedNumber(response.data.totalElements);\n                if (response.data.last === true) {\n                    setSearchPageNumber(null);\n                }\n                else{\n                    setSearchPageNumber(1);\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n        if(searchData === null || tag === null || tag === \"\" || tag.length === 0){\n            setIsSearching(false);\n            setTag(\"\");\n        }\n        else{\n            setIsSearching(true);\n            setTag(params.get('q'));\n        }\n    }, [tag]);\n\n    const handleScroll = () => {\n        const scrollTop = searchPageRef.current.scrollTop;\n        const scrollHeight = searchPageRef.current.scrollHeight;\n        const clientHeight = searchPageRef.current.clientHeight;\n\n        if (scrollHeight - scrollTop - clientHeight === 0) {\n            if (!(searchPageNumber === null)) {\n                axios\n                    .get(\"https://waflog.kro.kr/api/v1/post/search\", {\n                        params: {\n                            keyword: tag,\n                            page: searchPageNumber,\n                            size: 3\n                        },\n                    })\n                    .then((response) => {\n                        setSearchData(searchData.concat(response.data.content));\n                        if (response.data.last === true) {\n                            setSearchPageNumber(null);\n                        } else {\n                            setSearchPageNumber(searchPageNumber + 1);\n                        }\n                    });\n            }\n        }\n    };\n\n    return(\n        <div className=\"searchpage\" ref={searchPageRef} onScroll={handleScroll}>\n            <Header/>\n            <div className=\"searchbox\">\n                <IoIosSearch className=\"searchpage-icon\"/>\n                <div className=\"search-input-box\">\n                    <input className=\"search-input\" placeholder=\"검색어를 입력하세요\" value={tag} onChange={handleInput}/>\n                </div>\n            </div>\n            {isSearching ? <div className=\"search-info\">총 <b>{filtedNumber}개</b>의 포스트를 찾았습니다.</div> : <div className=\"search-info\">검색결과가 없습니다.</div> }\n            <ul className=\"search-list\">\n                {searchData.map((item) => (\n                    <SearchItem item={item} key={item.id} />\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default SearchPage;","import { useEffect, useState, useRef } from \"react\";\nimport \"./RecentPage.scss\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../MainPage/Header/Header\";\nimport PostListControlBar from \"../MainPage/PostListControlBar/PostListControlBar\";\nimport PostItem from \"../MainPage/PostItem/PostItem\";\n\n// 더미 데이터\nconst dummyData2 = [\n  {\n    id: 1,\n    title: \"최신 페이지 테스트\",\n    summary: \"2021년 다녀본 국내 여행지들 모음\",\n    postImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"김와플\",\n    likes: 100,\n  },\n  {\n    id: 2,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n      \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n  {\n    id: 3,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n  {\n    id: 4,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n  {\n    id: 5,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n  {\n    id: 6,\n    title: \"클라우드프론트 배포방법\",\n    summary: \"클라우드프론트 배포방법에 대해\",\n    postImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    date: \"2021년 12월 7일\",\n    comments: 7,\n    authorImg:\n        \"https://github.githubassets.com/images/modules/logos_page/Octocat.png\",\n    author: \"이와플\",\n    likes: 65,\n  },\n];\n\nconst RecentPage = () => {\n  const [recentPostList, setRecentPostList] = useState([]);\n  const [recentPostPage, setRecentPostPage] = useState(0);\n\n  useEffect(() => {\n    axios\n      .get(\"https://waflog.kro.kr/api/v1/post/recent\", {\n        params: {\n          page: 0,\n          size: 4\n        }\n      })\n      .then((response) => {\n        console.log(response);\n        setRecentPostList(response.data.content);\n        if (response.data.last === true) {\n          setRecentPostPage(null);\n        }\n        else{\n          setRecentPostPage(1);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const recentPostRef = useRef({});\n\n  const handleScroll = () => {\n    const scrollTop = recentPostRef.current.scrollTop;\n    const scrollHeight = recentPostRef.current.scrollHeight;\n    const clientHeight = recentPostRef.current.clientHeight;\n\n    if (scrollHeight - scrollTop - clientHeight === 0) {\n      if (!(recentPostPage === null)) {\n        axios\n          .get(\"https://waflog.kro.kr/api/v1/post/recent\", {\n            params: {\n              page: recentPostPage,\n              size: 4\n            }\n          })\n          .then((response) => {\n            setRecentPostList(recentPostList.concat(response.data.content));\n            if (response.data.last === true) {\n              setRecentPostPage(null);\n            } else {\n              setRecentPostPage(recentPostPage + 1);\n            }\n            console.log(recentPostList);\n            console.log(recentPostPage);\n          });\n      }\n    }\n  };\n\n  return (\n    <div className=\"recentpage\" ref={recentPostRef} onScroll={handleScroll}>\n      <Header />\n      <PostListControlBar />\n\n      <ul className={\"PostList\"}>\n        {recentPostList.map((item) => (\n          <PostItem item={item} key={item.id} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default RecentPage;\n","import {useState, useRef} from \"react\";\nimport {useHistory, useParams, useLocation} from \"react-router-dom\";\nimport Modal from 'react-modal';\nimport './WriteModal.scss';\nimport { BsImage, BsFileEarmarkLock } from \"react-icons/bs\";\nimport { GoGlobe } from \"react-icons/go\";\n\nconst WriteModal = ( props ) => {\n\n    const {isOpen, setIsOpen, title, contents} = props;\n    const history = useHistory();\n\n    const [summaryIn, setSummaryIn] = useState(\"\");\n    const [summaryOver, setSummaryOver] = useState(false);\n    const [isPublic, setIsPublic] = useState(true);\n\n    const [thumbImgBase64, setThumbImgBase64] = useState(\"\"); // 파일 base64\n    const [thumbImgFile, setThumbImgFile] = useState(null);\t//파일\n\n    const handleThumbnailFile = (event) => {\n        const reader = new FileReader();\n\n        reader.onloadend = () => {\n            // 2. 읽기가 완료되면 아래코드가 실행됩니다.\n            const base64 = reader.result;\n            if (base64) {\n                setThumbImgBase64(base64.toString()); // 파일 base64 상태 업데이트\n            }\n        }\n        if (event.target.files[0]) {\n            reader.readAsDataURL(event.target.files[0]); // 1. 파일을 읽어 버퍼에 저장합니다.\n            setThumbImgFile(event.target.files[0]); // 파일 상태 업데이트\n            console.log(event.target.files[0]);\n        }\n    }\n\n    const logoImgInput = useRef({});\n\n    const handleSummaryIn = (e) => {\n        if (e.target.value.length <= 150) {\n            setSummaryIn(e.target.value);\n            setSummaryOver(false);\n        }\n        else{\n            const cut = e.target.value.substr(0,150);\n            setSummaryIn(cut);\n            setSummaryOver(true);\n        }\n    }\n\n    const handlePublic = () => {\n        setIsPublic(true);\n    }\n    const handlePrivate = () => {\n        setIsPublic(false);\n    }\n    const handleCancle = () => {\n        setIsOpen(false);\n    }\n    const handleSubmit = () => {\n        history.push('/temp?data='+contents);\n    }\n    const handleThumbnail = (e) => {\n        e.preventDefault();\n        logoImgInput.current.click();\n    }\n\n    Modal.setAppElement('#root');\n\n    return(\n        <Modal className=\"login-modal\" isOpen={isOpen} onRequestClose={() => setIsOpen(false)}>\n            <div className=\"left-box\">\n                <h2 className=\"preview-title\">포스트 미리보기</h2>\n                <div className=\"thumbnail-box\">\n                    {thumbImgFile === null ?\n                        <BsImage className=\"thumbnail-icon\"/>\n                        :\n                        <img src={thumbImgBase64} alt={\"썸네일\"} className=\"thumbnail-img\"/>\n                    }\n                    <button className=\"upload-btn\" onClick={handleThumbnail}>업로드</button>\n                    <input className=\"upload-input\" type=\"file\" accept=\"image/*\" ref={logoImgInput} onChange={handleThumbnailFile} name=\"thumbImgFile\" id=\"thumbImgFile\"/>\n                </div>\n                <textarea className=\"summary-box\" placeholder=\"당신의 포스트를 짧게 소개해보세요.\" value={summaryIn} onChange={handleSummaryIn}/>\n                <div className={`text-num ${summaryOver ? 'over' : ''}`}>{summaryIn.length}/150</div>\n            </div>\n            <div className=\"line-center\"></div>\n            <div className=\"right-box\">\n                <h2 className=\"open-title\">공개설정</h2>\n                <div className=\"set-box\">\n                    <button className={`public-btn ${isPublic ? '' : 'not'}`} onClick={handlePublic}>\n                        <GoGlobe className=\"public-icon\"/>\n                        전체 공개\n                    </button>\n                    <button className={`private-btn ${isPublic ? 'not' : ''}`} onClick={handlePrivate}>\n                        <BsFileEarmarkLock className=\"private-icon\"/>\n                        비공개\n                    </button>\n                </div>\n                <h2 className=\"url-title\">URL 설정</h2>\n                <div className=\"url-box\">\n                    <div className=\"username-box\">/@{title}/</div>\n                    <input className=\"url-input\"/>\n                </div>\n                <div className=\"btn-box\">\n                    <button className=\"btn-cancle\" onClick={handleCancle}>취소</button>\n                    <button className=\"btn-submit\" onClick={handleSubmit}>출간하기</button>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default WriteModal;","import React, {useState, createRef, useEffect} from \"react\";\nimport axios from \"axios\";\nimport {useHistory} from \"react-router-dom\";\nimport './WritePage.scss';\nimport WriteModal from './WriteModal/WriteModal';\n\nimport '@toast-ui/editor/dist/toastui-editor.css';\nimport { Editor } from '@toast-ui/react-editor';\n\nimport Prism from 'prismjs';\nimport 'prismjs/themes/prism.css';\n\n// code-syntax-highlight\nimport '@toast-ui/editor-plugin-code-syntax-highlight/dist/toastui-editor-plugin-code-syntax-highlight.css';\nimport codeSyntaxHighlight from '@toast-ui/editor-plugin-code-syntax-highlight';\n\n// color-syntax\nimport 'tui-color-picker/dist/tui-color-picker.css';\nimport '@toast-ui/editor-plugin-color-syntax/dist/toastui-editor-plugin-color-syntax.css';\nimport colorSyntax from '@toast-ui/editor-plugin-color-syntax';\n\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { AiOutlineEnter } from \"react-icons/ai\"\n\nconst WritePage = () => {\n\n    const titleRef = createRef();\n    const editorRef = createRef();\n    const history = useHistory();\n\n    const [title, setTitle] = useState(\"\");\n    const [contents, setContents] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n\n    const onChangeEditorTextHandler = () => {\n        setContents(editorRef.current.getInstance().getMarkdown());\n    }\n\n    const handleTitle = (e) => {\n        setTitle(e.target.value);\n    }\n\n    const handleOut = () => {\n        history.replace(\"\");\n    }\n    const handleSubmit = () => {\n        setIsOpen(true);\n    }\n\n    useEffect(() => {\n        if (editorRef.current) {\n            editorRef.current.getInstance().removeHook(\"addImageBlobHook\");\n            editorRef.current\n                .getInstance()\n                .addHook(\"addImageBlobHook\", (blob, callback) => {\n                    console.log(\"이미지 감지\");\n                    /*(async () => {\n                        let formData = new FormData();\n                        formData.append(\"file\", blob);\n\n                        axios.defaults.withCredentials = true;\n                        const { data: url } = await axios.post(\n                            `${backUrl}image.do`,\n                            formData,\n                            {\n                                header: { \"content-type\": \"multipart/formdata\" },\n                            }\n                        );\n                        callback(url, \"alt text\");\n                    })();*/\n\n                    return false;\n                });\n        }\n\n        return () => {};\n    }, [editorRef]);\n\n    return (\n        <div>\n            <textarea\n                placeholder=\"제목을 입력하세요.\"\n                className=\"title-style\"\n                ref={titleRef}\n                value={title}\n                onChange={handleTitle}\n            />\n            <Editor\n                previewStyle=\"vertical\"\n                height=\"80vh\"\n                initialEditType=\"markdown\"\n                placeholder=\"내용을 입력하세요.\"\n                ref={editorRef}\n                plugins={[colorSyntax, [codeSyntaxHighlight, { highlighter: Prism }]]}\n                onChange={onChangeEditorTextHandler}\n            />\n            <div className=\"btn-box\">\n                <button className=\"out-btn\" onClick={handleOut}>\n                    <BiArrowBack className=\"out-icon\"/>\n                    <span>나가기</span>\n                </button>\n                <button className=\"submit-btn\" onClick={handleSubmit}>\n                    업로드\n                    <AiOutlineEnter className=\"submit-icon\"/>\n                </button>\n            </div>\n            <WriteModal isOpen={isOpen} setIsOpen={setIsOpen} title={title} contents={contents}/>\n        </div>\n    )\n}\n\nexport default WritePage;\n","import { useHistory } from \"react-router-dom\";\nimport \"./ErrorPage.scss\";\n\nconst ErrorPage = () => {\n  const history = useHistory();\n\n  const handleReturnHome = () => {\n    history.push(\"\");\n  };\n\n  return (\n    <div className=\"errorpage\">\n      <img\n        className=\"error-image\"\n        src=\"https://static.velog.io/static/media/undraw_page_not_found_su7k.7e3de5e9.svg\"\n        alt=\"error\"\n      />\n      <div className={\"text-nothing\"}>아무것도 없네요!</div>\n      <button className={\"btn-returnhome\"} onClick={handleReturnHome}>\n        홈으로\n      </button>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import \"./CommentsItem.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport dayjs from \"dayjs\";\n\nconst CommentsItem = ({ item }) => {\n  const history = useHistory();\n\n  const handlePostClick = () => {\n    history.push(\"/post/@\" + item.user.userId + \"/\" + item.url);\n  };\n\n  return (\n    <div className=\"comments-item\">\n      <div className=\"comments-info-section\">\n        <div className=\"comments-info-profile\">\n          <a href={\"/@\" + item.rootComment.user.userId}>\n            <img\n              className=\"comments-info-image\"\n              src={item.rootComment.user.image}\n              alt={\"유저 이미지\"}\n            />\n          </a>\n          <div className=\"comments-info-detail\">\n            <div className=\"comments-info-userId\">\n              <a\n                className=\"comments-info-userId-href\"\n                href={\"/@\" + item.rootComment.user.userId}\n              >\n                {item.rootComment.user.userId}\n              </a>\n            </div>\n            <div className=\"comments-info-date\">\n                {dayjs(item.rootComment.createdAt).format(\"YYYY년 MM월 DD일\")}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"comments-content\">{item.rootComment.content}</div>\n    </div>\n  );\n};\n\nexport default CommentsItem;\n","import \"./PostPage.scss\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport dayjs from \"dayjs\";\nimport ReactMarkdown from \"react-markdown\";\nimport Header from \"../MainPage/Header/Header\";\nimport { BsLink45Deg } from \"react-icons/bs\";\nimport { AiFillHome } from \"react-icons/ai\";\nimport { GrMail } from \"react-icons/gr\";\nimport { GoMarkGithub } from \"react-icons/go\";\nimport { BsFacebook } from \"react-icons/bs\";\nimport { BsTwitter } from \"react-icons/bs\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport CommentsItem from \"./CommentsItem/CommentsItem\";\n\nconst dataFormat = {\n  comments: [],\n  content: \"\",\n  createdAt: \"\",\n  id: 0,\n  likes: 0,\n  nextPost: {},\n  prevPost: {},\n  seriesPosts: null,\n  tags: [],\n  thumbnail: \"\",\n  title: \"\",\n  url: \"\",\n  user: {\n    facebookId: \"\",\n    githubId: \"\",\n    homepage: \"\",\n    id: 0,\n    image: \"\",\n    name: \"\",\n    pageTitle: \"\",\n    publicEmail: \"\",\n    shortIntro: \"\",\n    twitterId: \"\",\n    userId: \"\",\n  },\n};\n\nconst commentsData = [\n  {\n    rootComment: {\n      id: 0,\n      user: {\n        id: 0,\n        userId: \"abc\",\n        image: \"https://picsum.photos/id/2/200\",\n      },\n      content: \"이것은 예시 댓글입니다!\",\n      depth: 2,\n      createdAt: \"2021-12-29T17:33:43\",\n    },\n    replyNumber: 1,\n    replies: [\n      {\n        id: 1,\n        user: {\n          id: 1,\n          userId: \"abc\",\n          image: \"https://picsum.photos/id/2/200\",\n        },\n        content: \"abc\",\n        depth: 3,\n        createdAt: \"2021-12-29T17:33:43\",\n      },\n    ],\n  },\n  {\n    rootComment: {\n      id: 0,\n      user: {\n        id: 0,\n        userId: \"waflog-test\",\n        image: \"https://picsum.photos/id/2/200\",\n      },\n      content: \"이것은 두 번째 예시 댓글입니다!\",\n      depth: 2,\n      createdAt: \"2021-12-29T17:33:43\",\n    },\n    replyNumber: 1,\n    replies: [\n      {\n        id: 1,\n        user: {\n          id: 1,\n          userId: \"abc\",\n          image: \"https://picsum.photos/id/2/200\",\n        },\n        content: \"abc\",\n        depth: 3,\n        createdAt: \"2021-12-29T17:33:43\",\n      },\n    ],\n  }\n];\n\nconst PostPage = () => {\n  const params = useParams();\n  const history = useHistory();\n  const [postResponse, setPostResponse] = useState(dataFormat);\n\n  const currentUrl = window.location.href;\n\n  const handleLike = () => {\n    toast.success(\"좋아요 실행\");\n  };\n\n  const handleLink = () => {\n    toast.success(\"링크가 복사되었습니다.\");\n  };\n\n  const scrollToTop = () => {\n    // 클릭하면 스크롤이 위로 올라가는 함수\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://waflog.kro.kr/api/v1/post/@${params.userId}/${params.postUrl}`\n      )\n      .then((response) => {\n        setPostResponse(response.data);\n      })\n      .catch((error) => {\n        history.push(\"/error\"); // 백엔드 404 response 필요!!\n      });\n  }, []);\n\n  console.log(postResponse);\n\n  return (\n    <div className=\"postpage\">\n      <div id={\"scroller\"}>\n        <ToastContainer />\n        <Header pageTitle={postResponse.user.pageTitle} />\n\n        <div className=\"post-main-section\">\n          <div className=\"post-title\">{postResponse.title}</div>\n          <div className=\"post-information-section\">\n            <span className=\"post-user-id\">\n              <a>{postResponse.user.userId}</a>\n            </span>\n            <span className=\"post-separator\">·</span>\n            <span className=\"post-datetime\">\n              {dayjs(postResponse.createdAt).format(\"YYYY년 MM월 DD일\")}\n            </span>\n\n            <div className=\"post-like-section\">\n              <div className=\"post-like-wrapper\" onClick={handleLike}>\n                <svg\n                  className={\"icon-heart\"}\n                  width=\"24\"\n                  height=\"24\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path className={\"icon-heart-path\"} />\n                </svg>\n              </div>\n              <div className=\"post-like-count\">{postResponse.likes}</div>\n\n              <CopyToClipboard text={currentUrl}>\n                <div className=\"post-like-wrapper\" onClick={handleLink}>\n                  <BsLink45Deg className=\"icon-link\" />\n                </div>\n              </CopyToClipboard>\n\n              <div className=\"post-scroll-top\" onClick={scrollToTop}>\n                TOP\n              </div>\n            </div>\n          </div>\n\n          <ReactMarkdown className=\"post-content\">\n            {postResponse.content}\n          </ReactMarkdown>\n        </div>\n\n        <div className=\"post-user-section\">\n          <div className=\"post-user-info\">\n            <img\n              className=\"post-user-image\"\n              src={postResponse.user.image}\n              alt=\"유저 이미지\"\n            />\n            <div className=\"post-user-text\">\n              <div className=\"post-user-name\">\n                <a>{postResponse.user.name}</a>\n              </div>\n              <div className=\"post-user-intro\">\n                {postResponse.user.shortIntro}\n              </div>\n            </div>\n          </div>\n          <div className=\"post-user-division\" />\n          <div className=\"post-user-sns\">\n            {postResponse.user.githubId !== \"\" ? (\n              <a\n                className={\"href-sns\"}\n                href={`https://github.com/${postResponse.user.githubId}`}\n              >\n                <GoMarkGithub className={\"icon-sns\"} />\n              </a>\n            ) : (\n              <div />\n            )}\n\n            {postResponse.user.facebookId !== \"\" ? (\n              <a\n                className={\"href-sns\"}\n                href={`https://facebook.com/${postResponse.user.facebookId}`}\n              >\n                <BsFacebook className={\"icon-sns\"} />\n              </a>\n            ) : (\n              <div />\n            )}\n\n            {postResponse.user.twitterId !== \"\" ? (\n              <a\n                className={\"href-sns\"}\n                href={`https://twitter.com/${postResponse.user.twitterId}`}\n              >\n                <BsTwitter className={\"icon-sns\"} />\n              </a>\n            ) : (\n              <div />\n            )}\n\n            {postResponse.user.homepage !== \"\" ? (\n              <a className={\"href-sns\"} href={postResponse.user.homepage}>\n                <AiFillHome className={\"icon-sns\"} />\n              </a>\n            ) : (\n              <div />\n            )}\n\n            {postResponse.user.publicEmail !== \"\" ? (\n              <a\n                className={\"href-sns\"}\n                href={\"mailto:\" + postResponse.user.publicEmail}\n              >\n                <GrMail className={\"icon-sns\"} />\n              </a>\n            ) : (\n              <div />\n            )}\n          </div>\n\n          <div className=\"post-comments-section\">\n            <h4 className=\"post-comments-count\">{}개의 댓글</h4>\n\n            <input\n              className=\"post-comments-input\"\n              placeholder=\"댓글을 입력하세요.\"\n            />\n\n            <div className=\"post-comments-button-wrapper\">\n              <button className=\"post-comments-button\">댓글 작성</button>\n            </div>\n\n            <ul className={\"post-comments-list\"}>\n              {commentsData.map((item) => (\n                <CommentsItem item={item} key={item.id} />\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PostPage;\n","import \"./RegisterPage.scss\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst RegisterPage = () => {\n  const params = useParams();\n  const history = useHistory();\n  const URLSearch = new URLSearchParams(window.location.search);\n\n  const [registerName, setRegisterName] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerId, setRegisterId] = useState(\"\");\n  const [registerIntro, setRegisterIntro] = useState(\"\");\n  const [registerError, setRegisterError] = useState(0);\n  const [registerToken, setRegisterToken] = useState(\"\");\n\n  useEffect(() => {\n    const registerCode = URLSearch.get(\"code\");\n    console.log(registerCode);\n\n    axios\n      .get(`https://waflog.kro.kr/api/v1/auth/verify`, {\n        params: {\n          token: registerCode,\n        },\n      })\n      .then((response) => {\n        console.log(response);\n        setRegisterEmail(response.data.email);\n        setRegisterToken(response.headers.authentication);\n      })\n      .catch((error) => {});\n  }, []);\n\n  const handleCancel = () => {\n    history.push(\"/\");\n  };\n\n  const handleComplete = (e) => {\n    const spacePattern = /\\s/g; // 공백\n    const specialPattern = /[~!@#$%^&*()+|<>?:{}]/; // 특수문자\n    const koreanPattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/; // 한글\n\n    if (registerName === \"\") {\n      setRegisterError(1);\n    } else if (\n      registerId.match(spacePattern) ||\n      registerId.match(specialPattern) ||\n      registerId.match(koreanPattern) ||\n      registerId.length < 3 ||\n      registerId.length > 16\n    ) {\n      setRegisterError(2);\n    } else {\n      setRegisterError(0);\n    }\n\n    axios\n        .post(\n        `https://waflog.kro.kr/api/v1/auth/user/info`,\n        {\n          email: registerEmail,\n          name: registerName,\n          userId: registerId,\n          shortIntro: registerIntro\n        },\n        {\n          headers: {\n            Authentication: registerToken\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.headers);\n      })\n      .catch((error) => {\n        if (registerError === 0 || registerError === 4) {\n          setRegisterError(4);\n        }\n      });\n  };\n\n  return (\n    <div className=\"registerpage\">\n      <div className=\"register-section\">\n        <h1 className=\"register-welcome\">환영합니다!</h1>\n        <div className=\"register-description\">\n          기본 회원 정보를 등록해주세요.\n        </div>\n\n        <div className=\"register-detail-section\">\n          <div className=\"register-detail-block\">\n            <label className=\"register-detail-text\">이름</label>\n            <div className=\"register-detail-input\">\n              <div className=\"register-detail-input-wrapper\">\n                <input\n                  className=\"register-detail-input-inputbox\"\n                  placeholder=\"이름을 입력하세요\"\n                  value={registerName}\n                  onChange={(e) => setRegisterName(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"register-detail-block\">\n            <label className=\"register-detail-text\">이메일</label>\n            <div className=\"register-detail-input\">\n              <div className=\"register-detail-input-wrapper\">\n                <input\n                  className=\"register-detail-input-inputbox\"\n                  placeholder={registerEmail}\n                  disabled\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"register-detail-block\">\n            <label className=\"register-detail-text\">아이디</label>\n            <div className=\"register-detail-input\">\n              <div className=\"register-detail-input-wrapper\">\n                <input\n                  className=\"register-detail-input-inputbox\"\n                  placeholder=\"아이디를 입력하세요\"\n                  value={registerId}\n                  onChange={(e) => setRegisterId(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"register-detail-block\">\n            <label className=\"register-detail-text\">한 줄 소개</label>\n            <div className=\"register-detail-input\">\n              <div className=\"register-detail-input-wrapper\">\n                <input\n                  className=\"register-detail-input-inputbox\"\n                  placeholder=\"당신을 한 줄로 소개해보세요\"\n                  value={registerIntro}\n                  onChange={(e) => setRegisterIntro(e.target.value)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"register-error-section\">\n          {registerError === 0\n            ? \"\"\n            : registerError === 1\n            ? \"이름을 입력해주세요.\"\n            : registerError === 2\n            ? \"아이디는 3~16자의 알파벳,숫자,혹은 - _ 으로 이루어져야 합니다.\"\n            : \"에러 발생!\"}\n        </div>\n\n        <div className=\"register-button-section\">\n          <button className=\"register-btn-cancel\" onClick={handleCancel}>\n            취소\n          </button>\n          <button className=\"register-btn-complete\" onClick={handleComplete}>\n            완료\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import \"./App.css\";\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\nimport MainPage from \"./Component/MainPage/MainPage\";\nimport SearchPage from \"./Component/SearchPage/SearchPage\";\nimport RecentPage from \"./Component/RecentPage/RecentPage\";\nimport WritePage from \"./Component/WritePage/WritePage\";\nimport ErrorPage from \"./Component/ErrorPage/ErrorPage\";\nimport PostPage from \"./Component/PostPage/PostPage\";\nimport RegisterPage from \"./Component/RegisterPage/RegisterPage\";\n\nfunction App() {\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path=\"/search\" component={SearchPage} exact={true}/>\n                <Route path=\"/recent\" component={RecentPage} exact={true}/>\n                <Route path=\"/write\" component={WritePage} exact={true}/>\n                <Route path=\"/error\" component={ErrorPage} exact={true}/>\n                <Route path=\"/post/@:userId/:postUrl\" component={PostPage} exact={true}/>\n                <Route path=\"/register\" component={RegisterPage} exact={true}/>\n                <Route path=\"/\" component={MainPage} exact={true}/>\n                <Redirect to=\"/\"/>\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}